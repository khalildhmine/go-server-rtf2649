package models

import (
	"time"
)

// Address represents a customer's address
type Address struct {
	ID             uint      `json:"id" gorm:"primaryKey"`
	UserID         uint      `json:"user_id" gorm:"not null"`
	Label          string    `json:"label" gorm:"size:50"` // e.g., "Maison", "Bureau"
	AddressDetails string    `json:"address_details" gorm:"type:text;not null"`
	City           string    `json:"city" gorm:"size:50;not null;default:'Nouakchott'"`
	Latitude       float64   `json:"latitude" gorm:"type:decimal(10,8);not null"`
	Longitude      float64   `json:"longitude" gorm:"type:decimal(11,8);not null"`
	IsDefault      bool      `json:"is_default" gorm:"default:false"`
	CreatedAt      time.Time `json:"created_at"`
	UpdatedAt      time.Time `json:"updated_at"`
	
	// Relationships
	User User `json:"user,omitempty" gorm:"foreignKey:UserID"`
}

// TableName specifies the table name for Address
func (Address) TableName() string {
	return "addresses"
}

// AddressRequest represents the request structure for creating/updating addresses
type AddressRequest struct {
	Label          string  `json:"label" binding:"required"`
	AddressDetails string  `json:"address_details" binding:"required"`
	City           string  `json:"city" binding:"required"`
	Latitude       float64 `json:"latitude"` // Will be generated by backend geocoding
	Longitude      float64 `json:"longitude"` // Will be generated by backend geocoding
	IsDefault      bool    `json:"is_default"`
}

// AddressResponse represents the response structure for addresses
type AddressResponse struct {
	ID             uint    `json:"id"`
	Label          string  `json:"label"`
	AddressDetails string  `json:"address_details"`
	City           string  `json:"city"`
	Latitude       float64 `json:"latitude"`
	Longitude      float64 `json:"longitude"`
	IsDefault      bool    `json:"is_default"`
}
